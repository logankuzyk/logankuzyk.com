user  nginx;
worker_processes auto;
events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile on;
  tcp_nopush on;
  keepalive_timeout 65;
  server_tokens off;

  # Redirect HTTP -> HTTPS
  server {
    listen 80;
    server_name logankuzyk.com www.logankuzyk.com;
    return 301 https://$host$request_uri;
  }

  upstream next_app {
    server website:3000;  # matches your Compose service + port
    keepalive 32;
  }

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  server {
    listen 443 ssl http2;
    server_name logankuzyk.com www.logankuzyk.com;

    ssl_certificate     /etc/ssl/certs/origin.pem;
    ssl_certificate_key /etc/ssl/private/origin.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # Optional security headers
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Basic gzip
    gzip on;
    gzip_types text/plain text/css application/json application/javascript application/octet-stream image/svg+xml;

    location / {
      proxy_pass http://next_app;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }
  }
}
